# variant 6 (One man'sj unk is another man's treasure)
n = 308_737_337
e = 17_657

coded = [
    279604812, 23295830, 153283840, 227200722, 44931545, 105047949, 23295830, 306850011, 197827502, 152539466,
    227200722, 69010571, 23295830, 211670599, 227200722, 5595583, 197827502, 227200722, 105047949, 23295830,
    3071939, 18553803, 19316748, 153283840, 184458268, 227200722, 44931545, 105047949, 23295830, 306850011,
    197827502, 227200722, 18553803, 184458268, 153283840, 105047949, 197827502, 69010571, 184458268, 153283840
]
# variant 5 (A ship in the harbor is safe, but that is not what a ship is for)
# n = 310021783
# e = 17657
#
# coded = [201195786, 19776506, 261357195, 165422523, 303340842, 235403339, 19776506, 303340842, 134720377, 19776506,
#          273556237, 165422523, 185323849, 19776506, 165422523, 266888596, 4485104, 24041966, 180050949, 4485104,
#          19776506, 303340842, 261357195, 19776506, 261357195, 266888596, 149562732, 185323849, 166476210, 19776506,
#          24041966, 306024810, 273556237, 19776506, 273556237, 165422523, 266888596, 273556237, 19776506, 303340842,
#          261357195, 19776506, 134720377, 180050949, 273556237, 19776506, 284192102, 165422523, 266888596, 273556237,
#          19776506, 266888596, 19776506, 261357195, 165422523, 303340842, 235403339, 19776506, 303340842, 261357195,
#          19776506, 149562732, 180050949, 4485104]


def mod_pow(base, exponent, modulus):
    if exponent == 0:
        return 1
    elif exponent % 2 == 1:  # odd exponent
        return (base * mod_pow(base, exponent - 1, modulus)) % modulus
    else:
        halfexp = mod_pow(base, exponent // 2, modulus)
        return (halfexp * halfexp) % modulus


print("Finding p and q...")

for i in range(2, n):
    if n % i == 0:
        p = i
        q = n // i
        break

print(f'p = {p}; q = {q}')

fi = (p - 1) * (q - 1)
print(f'fi = {fi}')

print("Finding d...")
for i in range(1, fi):
    if ((i * e) % fi) == 1:
        d = i
        break
print(f'd = {d}')

for c in coded:
    result = mod_pow(base=c, exponent=d, modulus=n)
    print(chr(result), end='')

print()